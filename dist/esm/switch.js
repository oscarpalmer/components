var o={active:{capture:!1,passive:!1},passive:{capture:!1,passive:!0}},h=['[contenteditable]:not([contenteditable="false"])',"[href]","[tabindex]:not(slot)","audio[controls]","button","details","details[open] > summary","input","select","textarea","video[controls]"],f=h.map(s=>`${s}:not([disabled]):not([hidden]):not([tabindex="-1"])`).join(",");function d(s,e,i){let t=s.getAttribute(e);return t==null||t.trim().length===0?i:t}function c(s,e){return s.replace(/\{\{(\w+)\}\}/g,(i,...t)=>t==null||t.length===0?i:String(e?.[t[0]]??i))}function r(s,e,i){s.setAttribute(e,String(typeof i=="boolean"?i:!1))}var b=`<swanky-switch-label id="{{id}}">{{label}}</swanky-switch-label>
<swanky-switch-status aria-hidden="true">
	<swanky-switch-status-indicator></swanky-switch-status-indicator>
</swanky-switch-status>
<swanky-switch-text aria-hidden="true">
	<swanky-switch-text-off>{{off}}</swanky-switch-text-off>
	<swanky-switch-text-on>{{on}}</swanky-switch-text-on>
</swanky-switch-text>`,n=class{static addListeners(e){e.addEventListener("click",n.onToggle.bind(e),o.passive),e.addEventListener("keydown",n.onKey.bind(e),o.passive)}static initialize(e,i,t){i.parentElement?.removeChild(i),t.parentElement?.removeChild(t),r(e,"aria-checked",t.checked||e.checked),r(e,"aria-disabled",t.disabled||e.disabled),r(e,"aria-readonly",t.readOnly||e.readOnly),e.setAttribute("aria-labelledby",`${t.id}_label`),e.setAttribute("id",t.id),e.setAttribute("name",t.name??t.id),e.setAttribute("role","switch"),e.setAttribute("tabindex","0"),e.setAttribute("value",t.value);let l=d(e,"swanky-switch-off","Off"),u=d(e,"swanky-switch-on","On");e.insertAdjacentHTML("afterbegin",n.render(t.id,i,l,u)),n.addListeners(e)}static onKey(e){(e.key===" "||e.key==="Enter")&&this instanceof a&&n.toggle(this)}static onToggle(){this instanceof a&&n.toggle(this)}static render(e,i,t,l){return c(b,{off:t,on:l,id:`${e}_label`,label:i.innerHTML})}static toggle(e){e.disabled||e.readOnly||(e.checked=!e.checked,e.dispatchEvent(new Event("change")))}},a=class extends HTMLElement{get checked(){return this.getAttribute("aria-checked")==="true"}set checked(e){r(this,"aria-checked",e)}get disabled(){return this.getAttribute("aria-disabled")==="true"}set disabled(e){r(this,"aria-disabled",e)}get readOnly(){return this.getAttribute("aria-readonly")==="true"}set readOnly(e){r(this,"aria-readonly",e)}get value(){return this.checked?"on":"off"}constructor(){super();let e=this.querySelector("[swanky-switch-input]"),i=this.querySelector("[swanky-switch-label]");if(typeof e>"u"||!(e instanceof HTMLInputElement)||e.type!=="checkbox")throw new Error("<swanky-switch> must have an <input>-element with type 'checkbox' and the attribute 'swanky-switch-input'");if(typeof i>"u"||!(i instanceof HTMLElement))throw new Error("<swanky-switch> must have a <label>-element with the attribute 'swanky-switch-label'");n.initialize(this,i,e)}};globalThis.customElements.define("swanky-switch",a);
