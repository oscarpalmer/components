(()=>{var h=Object.defineProperty;var f=(e,i,t)=>i in e?h(e,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[i]=t;var o=(e,i,t)=>(f(e,typeof i!="symbol"?i+"":i,t),t);var c={active:{capture:!1,passive:!1},passive:{capture:!1,passive:!0}};function n(e){return(e??"").trim().length===0}function b(e,i,t){let r=document.createElement("span");return r.ariaHidden=!0,r.className=`${i}__label`,r.id=`${e}_label`,r.innerHTML=t,r}function m(e){let i=document.createElement("span");i.ariaHidden=!0,i.className=`${e}__status`;let t=document.createElement("span");return t.className=`${e}__status__indicator`,i.append(t),i}function p(e,i,t){let r=document.createElement("span");return r.ariaHidden=!0,r.className=`${e}__text`,r.append(u("off",e,t)),r.append(u("on",e,i)),r}function u(e,i,t){let r=document.createElement("span");return r.className=`${i}__text__${e}`,r.innerHTML=t,r}function g(e,i,t){i.parentElement?.removeChild(i),t.parentElement?.removeChild(t),e.setAttribute("aria-checked",t.checked||e.checked),e.setAttribute("aria-disabled",t.disabled||e.disabled),e.setAttribute("aria-labelledby",`${t.id}_label`),e.setAttribute("aria-readonly",t.readOnly||e.readonly),e.setAttribute("value",t.value),e.id=t.id,e.name=t.name??t.id,e.role="switch",e.tabIndex=0;let r=e.getAttribute("classNames"),s=e.getAttribute("off"),l=e.getAttribute("on");n(r)&&(r="palmer-switch"),n(s)&&(s="Off"),n(l)&&(l="On"),e.insertAdjacentElement("beforeend",b(e.id,r,i.innerHTML)),e.insertAdjacentElement("beforeend",m(r)),e.insertAdjacentElement("beforeend",p(r,l,s)),e.addEventListener("click",_.bind(e),c.passive),e.addEventListener("keydown",y.bind(e),c.active)}function y(e){[" ","Enter"].includes(e.key)&&(e.preventDefault(),d(this))}function _(){d(this)}function d(e){e.disabled||e.readonly||(e.checked=!e.checked,e.dispatchEvent(new Event("change")))}var a=class extends HTMLElement{constructor(){super();o(this,"internals");this.internals=this.attachInternals?.();let t=this.querySelector("[palmer-switch-input]"),r=this.querySelector("[palmer-switch-label]");if(t===null||!(t instanceof HTMLInputElement)||t.type!=="checkbox")throw new TypeError("<palmer-switch> must have an <input>-element with type 'checkbox' and the attribute 'palmer-switch-input'");if(r===null||!(r instanceof HTMLElement))throw new TypeError("<palmer-switch> must have an element with the attribute 'palmer-switch-label'");g(this,r,t)}get checked(){return this.getAttribute("aria-checked")==="true"}set checked(t){this.setAttribute("aria-checked",t)}get disabled(){return this.getAttribute("aria-disabled")==="true"}set disabled(t){this.setAttribute("aria-disabled",t)}get form(){return this.internals?.form}get labels(){return this.internals?.labels}get name(){return this.getAttribute("name")??""}set name(t){this.setAttribute("name",t)}get readonly(){return this.getAttribute("aria-readonly")==="true"}set readonly(t){this.setAttribute("aria-readonly",t)}get validationMessage(){return this.internals?.validationMessage??""}get validity(){return this.internals?.validity}get value(){return this.getAttribute("value")??(this.checked?"on":"off")}get willValidate(){return this.internals?.willValidate??!0}checkValidity(){return this.internals?.checkValidity()??!0}reportValidity(){return this.internals?.reportValidity()??!0}};o(a,"formAssociated",!0);customElements.define("palmer-switch",a);})();
