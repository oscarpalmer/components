"use strict";var u={active:{capture:!1,passive:!1},passive:{capture:!1,passive:!0}},w=['[contenteditable]:not([contenteditable="false"])',"[href]","[tabindex]:not(slot)","audio[controls]","button","details","details[open] > summary","input","select","textarea","video[controls]"],g=w.map(n=>`${n}:not([disabled]):not([hidden]):not([tabindex="-1"])`).join(",");function c(n,t,i){let e=n.getAttribute(t);return e==null||e.trim().length===0?i:e}function l(n,t){return n.replace(/\{\{(\w+)\}\}/g,(i,...e)=>{var a;return e==null||e.length===0?i:String((a=t==null?void 0:t[e[0]])!=null?a:i)})}function r(n,t,i){n.setAttribute(t,String(typeof i=="boolean"?i:!1))}var d={full:"{{label}}{{indicator}}{{status}}",indicator:'<div class="swanky-switch__indicator" aria-hidden="true"><span class="swanky-switch__indicator__value"></span></div>',label:'<div id="{{id}}" class="swanky-switch__label">{{html}}</div>',status:{item:'<span class="swanky-switch__status__{{type}}">{{html}}</span>',wrapper:'<div class="swanky-switch__status" aria-hidden="true">{{off}}{{on}}</div>'}},s=class{static addListeners(t){t.addEventListener("click",s.onToggle.bind(t),u.passive),t.addEventListener("keydown",s.onKey.bind(t),u.passive)}static initialize(t,i,e){var h,b,f;(h=i.parentElement)==null||h.removeChild(i),(b=e.parentElement)==null||b.removeChild(e),r(t,"aria-checked",e.checked||t.checked),r(t,"aria-disabled",e.disabled||t.disabled),r(t,"aria-readonly",e.readOnly||t.readOnly),t.setAttribute("aria-labelledby",`${e.id}_label`),t.setAttribute("id",e.id),t.setAttribute("name",(f=e.name)!=null?f:e.id),t.setAttribute("role","switch"),t.setAttribute("tabindex","0"),t.setAttribute("value",e.value);let a=c(t,"swanky-switch-off","Off"),y=c(t,"swanky-switch-on","On");t.insertAdjacentHTML("afterbegin",s.render(e.id,i,a,y)),s.addListeners(t)}static onKey(t){(t.key===" "||t.key==="Enter")&&this instanceof o&&s.toggle(this)}static onToggle(){this instanceof o&&s.toggle(this)}static render(t,i,e,a){return l(d.full,{indicator:d.indicator,label:l(d.label,{html:i.innerHTML,id:`${t}_label`}),status:l(d.status.wrapper,{off:l(d.status.item,{html:e,type:"off"}),on:l(d.status.item,{html:a,type:"on"})})})}static toggle(t){t.disabled||t.readOnly||(t.checked=!t.checked,t.dispatchEvent(new Event("change")))}},o=class extends HTMLElement{get checked(){return this.getAttribute("aria-checked")==="true"}set checked(t){r(this,"aria-checked",t)}get disabled(){return this.getAttribute("aria-disabled")==="true"}set disabled(t){r(this,"aria-disabled",t)}get readOnly(){return this.getAttribute("aria-readonly")==="true"}set readOnly(t){r(this,"aria-readonly",t)}get value(){return this.checked?"on":"off"}constructor(){if(super(),this.querySelector(".swanky-switch__label")!=null){s.addListeners(this);return}let t=this.querySelector("[swanky-switch-input]"),i=this.querySelector("[swanky-switch-label]");if(typeof t=="undefined"||!(t instanceof HTMLInputElement)||t.type!=="checkbox")throw new Error("<swanky-switch> must have an <input>-element with type 'checkbox' and the attribute 'swanky-switch-input'");if(typeof i=="undefined"||!(i instanceof HTMLElement))throw new Error("<swanky-switch> must have a <label>-element with the attribute 'swanky-switch-label'");s.initialize(this,i,t)}};globalThis.customElements.define("swanky-switch",o);
